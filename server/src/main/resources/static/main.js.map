{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/model/duration.ts","webpack:///./src/app/services/epics.service.ts","webpack:///./src/app/services/measurement.service.ts","webpack:///./src/app/services/metadata.service.ts","webpack:///./src/app/store/actions/current-view.actions.ts","webpack:///./src/app/store/actions/measurement.actions.ts","webpack:///./src/app/store/actions/metadata.actions.ts","webpack:///./src/app/store/epics/epics.module.ts","webpack:///./src/app/store/epics/measurements.epic.ts","webpack:///./src/app/store/epics/metadata.epic.ts","webpack:///./src/app/store/reducers/current-view.reducer.ts","webpack:///./src/app/store/reducers/measurements.reducer.ts","webpack:///./src/app/store/reducers/metadata.reducer.ts","webpack:///./src/app/store/reducers/reducers.ts","webpack:///./src/assets/components/app.component.scss","webpack:///./src/environments/environment.ts","webpack:///./src/hmr.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;ACxBA,6LAA6L,wBAAwB,gH;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhK;AACP;AAO9C;IALA;QAMwB,YAAO,GAAG,gCAAgC,CAAC;IAGnE,CAAC;IAHuB;QAArB,iEAAW,CAAC,OAAO,CAAC;;iDAA4C;IAEjE;QADC,mEAAM,CAAC,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;;wDAChB;IAHZ,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAIxB;IAAD,mBAAC;CAAA;AAJwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACD;AAEV;AACqB;AACO;AACM;AACzB;AACA;AAEH;AACG;AACZ;AACA;AACD;AACoC;AACtB;AACK;AAqB5D;IACE,mBAAmB,MAAsB,EACrB,OAA0B,EAC1B,aAA4B,EAC5B,QAA2B,EAC3B,YAA0B;QAJ3B,WAAM,GAAN,MAAM,CAAgB;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAmB;QAC3B,iBAAY,GAAZ,YAAY,CAAc;QAC5C,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC3C,IAAM,UAAU,GAAG,6EAAoB,EAAE,CAAC;QAC1C,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,QAAQ,CAAC,SAAS,EAAE,EAAE;YACxB,SAAS,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;SACnC;QACD,OAAO,CAAC,cAAc,CAAC,iEAAQ,EAAE,EAAc,EAAE,CAAC,UAAU,EAAE,oDAAe,EAAE,kEAAY,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;QAC3G,aAAa,CAAC,UAAU,EAAE,CAAC;QAC3B,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAfU,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,kEAAa;gBACb,yEAAmB,CAAC,OAAO,EAAE;gBAC7B,wDAAU;gBACV,6FAAuB;gBACvB,sEAAW;aACZ;YACD,SAAS,EACP,CAAC,gFAAkB;gBACjB,2EAAe;gBACf,oEAAY,CAAC;YACjB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;yCAE2B,4DAAc;YACZ,4DAAO;YACD,mEAAa;YAClB,sEAAiB;YACb,oEAAY;OALnC,SAAS,CAgBrB;IAAD,gBAAC;CAAA;AAhBqB;;;;;;;;;;;;;;;;;;;;;;;;ACtCmB;AACc;AAEhD,IAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,iEAAiE;KAChF;CACF,CAAC;AAUF;IAAA;IAA0B,CAAC;IAAd,UAAU;QARtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBvB;AAAA;AAAO,IAAM,SAAS,GACpB;IACE,EAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAC;IAC3B,EAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAC;IAC3B,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAC;IAC7B,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAC;IACxB,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAC;CAC3B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqC;AACK;AACoB;AACR;AAG1D;IAEE,sBAAoB,gBAAkC,EAClC,YAA0B;QAD1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;IAC9C,CAAC;IAED,+BAAQ,GAAR;QACE,OAAO,qEAAY,CACjB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EACxC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,EAC5C,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAEzC,IAAI,CAAC,YAAY,CAAC,WAAW,CAC9B,CAAC;IACJ,CAAC;IAdU,YAAY;QADxB,gEAAU,EAAE;yCAG2B,+EAAgB;YACpB,uEAAY;OAHnC,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AACC;AAEI;AAED;AAG/C;IAUE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,wBAAmB,GAAW,kBAAkB,CAAC;QAEjD,qBAAgB,GAAW,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;QAEjE,4BAAuB,GAAW,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;QAEvE,oBAAe,GAAW,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAE;IAGhE,CAAC;IAED,8CAAiB,GAAjB,UAAkB,QAAkB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,gBAAgB,EAAE;YACzD,MAAM,EAAE;gBACN,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACnC,IAAI,EAAE,GAAG;aACV;SACF,CAAC,CAAC,IAAI,CACL,0DAAG,CAAC,sBAAY,IAAI,mBAAY,CAAC,GAAG,CAAC,qBAAW,IAAI,qBAAK,WAAW,IAAE,eAAe,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAE,EAA1E,CAA0E,CAAC,EAA3G,CAA2G,CAAC,EAChI,iEAAU,CAAC,eAAK,IAAI,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,+CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,eAAK,IAAI,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;IAC/G,CAAC;IAED,0CAAa,GAAb;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,eAAK,IAAI,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;IACvG,CAAC;IA9BU,kBAAkB;QAD9B,gEAAU,EAAE;yCAWe,+DAAU;OAVzB,kBAAkB,CA+B9B;IAAD,yBAAC;CAAA;AA/B8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRU;AACO;AACN;AACE;AAI5C;IAGE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,wBAAmB,GAAW,qBAAqB,CAAC;IAGpD,CAAC;IAED,2CAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAC1D,iEAAU,CAAC,eAAK,IAAI,8DAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CACvC,CAAC;IACJ,CAAC;IAVU,eAAe;QAD3B,gEAAU,EAAE;yCAIe,+DAAU;OAHzB,eAAe,CAW3B;IAAD,sBAAC;CAAA;AAX2B;;;;;;;;;;;;;ACN5B;AAAA;AAAA;AAAA;AAAA;AAA8D;AAEvD,IAAM,eAAe,GAAG,gCAAgC,CAAC;AAEzD,SAAS,oBAAoB,CAAC,QAAkB;IACrD,OAAO;QACL,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,EAAC,QAAQ,YAAC;KACpB,CAAC;AACJ,CAAC;AAEM,SAAS,mBAAmB,CAAC,QAAkB;IACpD,OAAO,kBAAQ;QACb,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzC,OAAO,QAAQ,CAAC,oFAAuB,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;AACH,CAAC;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,kBAAkB,GAAW,sBAAsB,CAAC;AAC1D,IAAM,0BAA0B,GAAW,8BAA8B,CAAC;AAC1E,IAAM,0BAA0B,GAAW,6BAA6B,CAAC;AAEzE,IAAM,oBAAoB,GAAW,yBAAyB,CAAC;AAC/D,IAAM,4BAA4B,GAAW,iCAAiC,CAAC;AAC/E,IAAM,4BAA4B,GAAW,gCAAgC,CAAC;AAE9E,IAAM,uBAAuB,GAAW,4BAA4B,CAAC;AACrE,IAAM,+BAA+B,GAAW,oCAAoC,CAAC;AACrF,IAAM,+BAA+B,GAAW,mCAAmC,CAAC;AAEpF,SAAS,uBAAuB,CAAC,QAAkB;IACxD,OAAO;QACL,IAAI,EAAE,kBAAkB;QACxB,OAAO,EAAE,EAAC,QAAQ,YAAC;KACpB,CAAC;AACJ,CAAC;AAEM,SAAS,8BAA8B,CAAC,YAA2B;IACxE,OAAO;QACL,IAAI,EAAE,0BAA0B;QAChC,OAAO,EAAE,EAAC,YAAY,gBAAC;KACxB,CAAC;AACJ,CAAC;AAEM,SAAS,8BAA8B;IAC5C,OAAO;QACL,IAAI,EAAE,0BAA0B;KACjC,CAAC;AACJ,CAAC;AAEM,SAAS,wBAAwB;IACtC,OAAO;QACL,IAAI,EAAE,oBAAoB;KAC3B,CAAC;AACJ,CAAC;AAEM,SAAS,8BAA8B,CAAC,WAAwB;IACrE,OAAO;QACL,IAAI,EAAE,4BAA4B;QAClC,OAAO,EAAE,EAAC,WAAW,eAAC;KACvB,CAAC;AACJ,CAAC;AAEM,SAAS,+BAA+B;IAC7C,OAAO;QACL,IAAI,EAAE,4BAA4B;KACnC,CAAC;AACJ,CAAC;AAEM,SAAS,2BAA2B;IACzC,OAAO;QACL,IAAI,EAAE,uBAAuB;KAC9B,CAAC;AACJ,CAAC;AACM,SAAS,kCAAkC,CAAC,WAAwB;IACzE,OAAO;QACL,IAAI,EAAE,+BAA+B;QACrC,OAAO,EAAE,EAAC,WAAW,eAAC;KACvB,CAAC;AACJ,CAAC;AAEM,SAAS,kCAAkC;IAChD,OAAO;QACL,IAAI,EAAE,+BAA+B;KACtC,CAAC;AACJ,CAAC;AAEM,SAAS,qBAAqB;IACnC,OAAO,UAAC,QAAQ,EAAE,QAAQ;QACxB,QAAQ,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnE,QAAQ,CAAC,wBAAwB,EAAE,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC,2BAA2B,EAAE,CAAC,CAAC;IACjD,CAAC;AACH,CAAC;;;;;;;;;;;;;AC9ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,mBAAmB,GAAG,gCAAgC,CAAC;AAC7D,IAAM,2BAA2B,GAAG,wCAAwC,CAAC;AAC7E,IAAM,2BAA2B,GAAG,uCAAuC,CAAC;AAE5E,SAAS,uBAAuB;IACrC,OAAO;QACL,IAAI,EAAE,mBAAmB;KAC1B,CAAC;AACJ,CAAC;AAEM,SAAS,8BAA8B,CAAC,cAAsB;IACnE,OAAO;QACL,IAAI,EAAE,2BAA2B;QACjC,OAAO,EAAE,EAAC,cAAc,kBAAC;KAC1B,CAAC;AACJ,CAAC;AAEM,SAAS,8BAA8B;IAC5C,OAAO;QACL,IAAI,EAAE,2BAA2B;KAClC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACrBwC;AACY;AACR;AAQ7C;IAAA;IAA2B,CAAC;IAAf,WAAW;QANvB,8DAAQ,CAAC;YACR,SAAS,EAAE;gBACT,mEAAgB;gBAChB,2DAAY;aACb;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViB;AAC6B;AAY9B;AACuB;AACvC;AAGxB;IACE,0BAAqB,mBAAuC;QAA5D,iBACC;QADoB,wBAAmB,GAAnB,mBAAmB,CAAoB;QAG5D,uBAAkB,GAAG,UAAC,OAAqC;YACzD,OAAO,OAAO,CAAC,MAAM,CAAC,+EAAkB,CAAC,CAAC,IAAI,CAC5C,gEAAS,CAAC,UAAC,EAAS;oBAAR,oBAAO;gBACjB,OAAO,KAAI,CAAC,mBAAmB;qBAC5B,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC;qBACnC,IAAI,CACH,+DAAQ,CAAC,sBAAY,IAAI,sDAAE,CAAC,mGAA8B,CAAC,YAAY,CAAC,CAAC,EAAhD,CAAgD,CAAC,EAC1E,iEAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,mGAA8B,EAAE,CAAC,EAApC,CAAoC,CAAC,CAC1D,CAAC;YACN,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED,wBAAmB,GAAG,UAAC,OAAqC;YAC1D,OAAO,OAAO,CAAC,MAAM,CAAC,iFAAoB,CAAC,CAAC,IAAI,CAC9C,gEAAS,CAAC,UAAC,EAAS;oBAAR,oBAAO;gBACjB,OAAO,KAAI,CAAC,mBAAmB;qBAC5B,kBAAkB,EAAE;qBACpB,IAAI,CACH,+DAAQ,CAAC,qBAAW,IAAI,sDAAE,CAAC,mGAA8B,CAAC,WAAW,CAAC,CAAC,EAA/C,CAA+C,CAAC,EACxE,iEAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,oGAA+B,EAAE,CAAC,EAArC,CAAqC,CAAC,CAC3D,CAAC;YACN,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED,2BAAsB,GAAG,UAAC,OAAqC;YAC7D,OAAO,OAAO,CAAC,MAAM,CAAC,iFAAoB,CAAC,CAAC,IAAI,CAC9C,gEAAS,CAAC,UAAC,EAAS;oBAAR,oBAAO;gBACjB,OAAO,KAAI,CAAC,mBAAmB;qBAC5B,aAAa,EAAE;qBACf,IAAI,CACH,+DAAQ,CAAC,qBAAW,IAAI,sDAAE,CAAC,uGAAkC,CAAC,WAAW,CAAC,CAAC,EAAnD,CAAmD,CAAC,EAC5E,iEAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,uGAAkC,EAAE,CAAC,EAAxC,CAAwC,CAAC,CAC9D,CAAC;YACN,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;IAvCD,CAAC;IAFU,gBAAgB;QAD5B,gEAAU,EAAE;yCAE+B,gFAAkB;OADjD,gBAAgB,CA0C5B;IAAD,uBAAC;CAAA;AA1C4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBY;AACuB;AACD;AAIvC;AACwG;AAGhI;IACE,sBAAqB,eAAgC;QAArD,iBAAwD;QAAnC,oBAAe,GAAf,eAAe,CAAiB;QAErD,gBAAW,GAAG,UAAC,OAAqC;YAClD,OAAO,OAAO,CAAC,MAAM,CAAC,6EAAmB,CAAC,CAAC,IAAI,CAC7C,gEAAS,CAAC;gBACR,OAAO,KAAI,CAAC,eAAe;qBACxB,iBAAiB,EAAE;qBACnB,IAAI,CACH,+DAAQ,CAAC,iBAAO,IAAI,sDAAE,CAAC,gGAA8B,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAnD,CAAmD,CAAC,EACxE,iEAAU,CAAC,eAAK;oBACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACpB,OAAO,+CAAE,CAAC,gGAA8B,EAAE,CAAC,CAAC;gBAAA,CAAC,CAAC,CACtC,CAAC;YACN,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;IAfsD,CAAC;IAD7C,YAAY;QADxB,gEAAU,EAAE;yCAE2B,0EAAe;OAD1C,YAAY,CAiBxB;IAAD,mBAAC;CAAA;AAjBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgC;AACO;AAMzD,IAAM,aAAa,GAAqB;IAC7C,QAAQ,EAAE,yDAAS,CAAC,CAAC,CAAC;CACvB,CAAC;AAEK,IAAM,kBAAkB,GAA8B,UAAC,KAAuC,EAAE,MAAM;IAA/C,6CAAuC;IACnG,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,6EAAe,CAAC,CAAC;YACpB,oBAAW,KAAK,IAAE,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,IAAC;SACrD;QACD;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRsC;AAWjC,IAAM,aAAa,GAAsB;IAC9C,YAAY,EAAE,EAAE;IAChB,qBAAqB,EAAE,KAAK;IAC5B,eAAe,EAAE,IAAI;IACrB,aAAa,EAAE,KAAK;IACpB,kBAAkB,EAAE,IAAI;IACxB,gBAAgB,EAAE,KAAK;CACxB,CAAC;AAEK,IAAM,mBAAmB,GAA+B,UAAC,KAAwC,EAAE,MAAM;IAAhD,6CAAwC;IACtG,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,+EAAkB,CAAC,CAAC;YACvB,oBAAW,KAAK,IAAE,qBAAqB,EAAE,IAAI,IAAC;SAC/C;QACD,KAAK,uFAA0B,CAAC,CAAC;YAC/B,oBAAW,KAAK,IAAE,qBAAqB,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,IAAC;SAC3F;QACD,KAAK,uFAA0B,CAAC,CAAC;YAC/B,oBAAW,KAAK,IAAE,qBAAqB,EAAE,KAAK,IAAC;SAChD;QACD,KAAK,iFAAoB,CAAC,CAAC;YACzB,oBAAW,KAAK,IAAE,aAAa,EAAE,IAAI,IAAC;SACvC;QACD,KAAK,yFAA4B,CAAC,CAAC;YACjC,oBAAW,KAAK,IAAE,aAAa,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,IAAC;SACrF;QACD,KAAK,yFAA4B,CAAC,CAAC;YACjC,oBAAW,KAAK,IAAE,aAAa,EAAE,KAAK,IAAC;SACxC;QACD,KAAK,oFAAuB,CAAC,CAAC;YAC5B,oBAAW,KAAK,IAAE,gBAAgB,EAAE,IAAI,IAAC;SAC1C;QACD,KAAK,4FAA+B,CAAC,CAAC;YACpC,oBAAW,KAAK,IAAE,gBAAgB,EAAE,KAAK,EAAE,kBAAkB,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,IAAC;SAC3F;QACD,KAAK,4FAA+B,CAAC,CAAC;YACpC,oBAAW,KAAK,IAAE,gBAAgB,EAAE,KAAK,IAAC;SAC3C;QACD;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DwH;AAOnH,IAAM,aAAa,GAAkB;IAC1C,cAAc,EAAE,IAAI;IACpB,gBAAgB,EAAE,KAAK;CACxB,CAAC;AAEK,IAAM,eAAe,GAA2B,UAAC,KAAoC,EAAE,MAAM;IAA5C,6CAAoC;IAC1F,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,6EAAmB,CAAC,CAAC;YACxB,oBAAW,KAAK,IAAE,gBAAgB,EAAE,IAAI,IAAC;SAC1C;QACD,KAAK,qFAA2B,CAAC,CAAC;YAChC,oBAAW,KAAK,IAAE,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,gBAAgB,EAAE,KAAK,IAAC;SAC1F;QACD,KAAK,qFAA2B,CAAC,CAAC;YAChC,oBAAW,KAAK,IAAE,gBAAgB,EAAE,KAAK,IAAC;SAC3C;QACD;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;;;;;;;;;;;;;AC3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEO;AACI;AACC;AACR;AAE5C,IAAM,QAAQ,GAAY,6DAAe,CAAW;IACzD,KAAK,EAAE,mEAAa;IACpB,WAAW,EAAE,wEAAkB;IAC/B,YAAY,EAAE,yEAAmB;IACjC,QAAQ,EAAE,iEAAe;CAC1B,CAAC,CAAC;;;;;;;;;;;;ACZH,gCAAgC,kBAAkB,2BAA2B,yBAAyB,iBAAiB,EAAE,0BAA0B,mBAAmB,uBAAuB,mBAAmB,iCAAiC,kBAAkB,oBAAoB,qCAAqC,EAAE,wBAAwB,mBAAmB,8BAA8B,EAAE,+CAA+C,upC;;;;;;;;;;;;ACAxb;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,GAAG,EAAE,KAAK;CACX,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA4D;AAET;AAE5C,IAAM,YAAY,GAAG,UAAC,MAAW,EAAE,SAA0C;IAClF,IAAI,QAA0B,CAAC;IAC/B,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;IACpB,SAAS,EAAE,CAAC,IAAI,CAAC,aAAG,IAAI,QAAC,QAAQ,GAAG,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAC1C,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;QACjB,IAAM,MAAM,GAAmB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,4DAAc,CAAC,CAAC;QACrE,IAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,aAAa,EAAxB,CAAwB,CAAC,CAAC;QACtE,IAAM,WAAW,GAAG,wEAAc,CAAC,QAAQ,CAAC,CAAC;QAC7C,QAAQ,CAAC,OAAO,EAAE,CAAC;QACnB,WAAW,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;;;;;;;;;ACfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC2B;AAC4B;AAE9B;AACY;AACpB;AAGnC,IAAM,SAAS,GAAG,cAAM,uGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,EAAnD,CAAmD,CAAC;AAE5E,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,qCAAqC;IAErC,IAAI,qEAAW,CAAC,GAAG,EAAE;QACnB,IAAI,KAAa,EAAE,EAElB;aAAM;YACL,oEAAc,EAAE,CAAC;SAClB;QAED,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;KAC3D;CACF;KAAM;IACL,SAAS,EAAE,CAAC,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;CAC5C","file":"main.js","sourcesContent":["var map = {\n\t\"./components/weather-view/weather-view.module\": [\n\t\t\"./src/app/components/weather-view/weather-view.module.ts\",\n\t\t\"components-weather-view-weather-view-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<div class=\\\"application__header _head-color mat-elevation-z6\\\">\\n  <p class=\\\"mat-display-1\\\">WEATHER OBSERVER</p>\\n  <p class=\\\"mat-h1 mat-headline\\\">Current Version: {{currentVersion | async}}</p>\\n</div>\\n<div class=\\\"application__body mat-app-background\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import {Component, HostBinding} from '@angular/core';\nimport { select } from '@angular-redux/store';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['../assets/components/app.component.scss']\n})\nexport class AppComponent {\n  @HostBinding('class') classes = 'application mat-app-background';\n  @select(['metadata', 'currentVersion'])\n  currentVersion: string;\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {ApplicationRef, NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {MeasurementService} from './services/measurement.service';\nimport {NgReduxRouter, NgReduxRouterModule} from '@angular-redux/router';\nimport {DevToolsExtension, NgRedux, NgReduxModule} from '@angular-redux/store';\nimport {HttpClientModule} from '@angular/common/http';\nimport {createEpicMiddleware} from 'redux-observable';\nimport {AppState} from './store';\nimport {reducers} from './store/reducers/reducers';\nimport {EpicsService} from './services/epics.service';\nimport thunkMiddleware from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\nimport {AppRouting} from './app.routing';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {EpicsModule} from './store/epics/epics.module';\nimport {MetadataService} from './services/metadata.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgReduxModule,\n    NgReduxRouterModule.forRoot(),\n    AppRouting,\n    BrowserAnimationsModule,\n    EpicsModule\n  ],\n  providers:\n    [MeasurementService,\n      MetadataService,\n      EpicsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(public appRef: ApplicationRef,\n              private ngRedux: NgRedux<AppState>,\n              private ngReduxRouter: NgReduxRouter,\n              private devTools: DevToolsExtension,\n              private epicsService: EpicsService) {\n    const epics = this.epicsService.getEpics();\n    const middleware = createEpicMiddleware();\n    let enhancers = [];\n    if (devTools.isEnabled()) {\n      enhancers = [devTools.enhancer()];\n    }\n    ngRedux.configureStore(reducers, {} as AppState, [middleware, thunkMiddleware, createLogger()], enhancers);\n    ngReduxRouter.initialize();\n    middleware.run(epics);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: '/weather',\n    pathMatch: 'full'\n  },\n  {\n    path: 'weather',\n    loadChildren: './components/weather-view/weather-view.module#WeatherViewModule'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRouting { }\n","export interface Duration {\n  value: number;\n  name: string;\n}\n\nexport const DURATIONS: Duration[] =\n  [\n    {value: 3, name: '3 hours'},\n    {value: 6, name: '6 hours'},\n    {value: 12, name: '12 hours'},\n    {value: 24, name: 'Day'},\n    {value: 168, name: 'Week'}\n  ];\n","import {Injectable} from '@angular/core';\nimport {combineEpics} from 'redux-observable';\nimport {MeasurementsEpic} from '../store/epics/measurements.epic';\nimport {MetadataEpic} from '../store/epics/metadata.epic';\n\n@Injectable()\nexport class EpicsService {\n\n  constructor(private measurementsEpic: MeasurementsEpic,\n              private metadataEpic: MetadataEpic) {\n  }\n\n  getEpics() {\n    return combineEpics(\n      this.measurementsEpic.fetchMeasurements$,\n      this.measurementsEpic.getAverageMeasurement$,\n      this.measurementsEpic.getLastMeasurement$,\n\n      this.metadataEpic.getVersion$\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, throwError} from 'rxjs';\nimport {Measurement} from '../model/Measurement';\nimport {HttpClient} from '@angular/common/http';\nimport {Duration} from '../model/duration';\nimport {catchError, map} from 'rxjs/operators';\n\n@Injectable()\nexport class MeasurementService {\n\n  API_MEASUREMENT_URL: string = 'api/measurement/';\n\n  MEASUREMENTS_URL: string = this.API_MEASUREMENT_URL + 'interval';\n\n  CURRENT_MEASUREMENT_URL: string = this.API_MEASUREMENT_URL + 'current';\n\n  DAY_AVERAGE_URL: string = this.API_MEASUREMENT_URL + 'average' ;\n\n  constructor(private http: HttpClient) {\n  }\n\n  fetchMeasurements(duration: Duration): Observable<Measurement[]> {\n    return this.http.get<Measurement[]>(this.MEASUREMENTS_URL, {\n      params: {\n        duration: duration.value.toString(),\n        unit: 'h'\n      }\n    }).pipe(\n      map(measurements => measurements.map(measurement => ({...measurement, measurementTime: new Date(measurement.measurementTime)}))),\n      catchError(error => throwError(error)));\n  }\n\n  getLastMeasurement(): Observable<Measurement> {\n    return this.http.get<Measurement>(this.CURRENT_MEASUREMENT_URL).pipe(catchError(error => throwError(error)));\n  }\n\n  getDayAverage(): Observable<Measurement> {\n    return this.http.get<Measurement>(this.DAY_AVERAGE_URL).pipe(catchError(error => throwError(error)));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError} from 'rxjs/operators';\nimport {Observable, throwError} from 'rxjs';\nimport {Version} from '../model/version';\n\n@Injectable()\nexport class MetadataService {\n  CURRENT_VERSION_URL: string = \"api/version/current\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  getCurrentVersion(): Observable<Version> {\n    return this.http.get<Version>(this.CURRENT_VERSION_URL).pipe(\n      catchError(error => throwError(error))\n    );\n  }\n}\n","import {Duration} from '../../model/duration';\nimport {fetchMeasurementsAction} from './measurement.actions';\n\nexport const CHANGE_DURATION = '[Current view] Change duration';\n\nexport function changeDurationAction(duration: Duration) {\n  return {\n    type: CHANGE_DURATION,\n    payload: {duration}\n  };\n}\n\nexport function changeDurationThunk(duration: Duration) {\n  return dispatch => {\n    dispatch(changeDurationAction(duration));\n    return dispatch(fetchMeasurementsAction(duration));\n  }\n}\n","import {Duration} from '../../model/duration';\nimport {Measurement} from '../../model/Measurement';\n\nexport const FETCH_MEASUREMENTS: string = '[Measurements] Fetch';\nexport const FETCH_MEASUREMENTS_SUCCESS: string = '[Measurements] Fetch success';\nexport const FETCH_MEASUREMENTS_FAILURE: string = '[Measurements] Fetch failed';\n\nexport const GET_LAST_MEASUREMENT: string = '[Measurements] Get last';\nexport const GET_LAST_MEASUREMENT_SUCCESS: string = '[Measurements] Get last success';\nexport const GET_LAST_MEASUREMENT_FAILURE: string = '[Measurements] Get last failed';\n\nexport const GET_AVERAGE_MEASUREMENT: string = '[Measurements] Get average';\nexport const GET_AVERAGE_MEASUREMENT_SUCCESS: string = '[Measurements] Get average success';\nexport const GET_AVERAGE_MEASUREMENT_FAILURE: string = '[Measurements] Get average failed';\n\nexport function fetchMeasurementsAction(duration: Duration) {\n  return {\n    type: FETCH_MEASUREMENTS,\n    payload: {duration}\n  };\n}\n\nexport function fetchMeasurementsSuccessAction(measurements: Measurement[]) {\n  return {\n    type: FETCH_MEASUREMENTS_SUCCESS,\n    payload: {measurements}\n  };\n}\n\nexport function fetchMeasurementsFailureAction() {\n  return {\n    type: FETCH_MEASUREMENTS_FAILURE\n  };\n}\n\nexport function getLastMeasurementAction() {\n  return {\n    type: GET_LAST_MEASUREMENT\n  };\n}\n\nexport function getLastMeasurementSuccesAction(measurement: Measurement) {\n  return {\n    type: GET_LAST_MEASUREMENT_SUCCESS,\n    payload: {measurement}\n  };\n}\n\nexport function getLastMeasurementFailureAction() {\n  return {\n    type: GET_LAST_MEASUREMENT_FAILURE\n  };\n}\n\nexport function getAverageMeasurementAction() {\n  return {\n    type: GET_AVERAGE_MEASUREMENT\n  };\n}\nexport function getAverageMeasurementSuccessAction(measurement: Measurement) {\n  return {\n    type: GET_AVERAGE_MEASUREMENT_SUCCESS,\n    payload: {measurement}\n  };\n}\n\nexport function getAverageMeasurementFailureAction() {\n  return {\n    type: GET_AVERAGE_MEASUREMENT_FAILURE\n  };\n}\n\nexport function initMeasutementsThunk() {\n  return (dispatch, getState) => {\n    dispatch(fetchMeasurementsAction(getState().currentView.duration));\n    dispatch(getLastMeasurementAction());\n    return dispatch(getAverageMeasurementAction());\n  }\n}\n\n","export const GET_CURRENT_VERSION = '[Metadata] Get current version';\nexport const GET_CURRENT_VERSION_SUCCESS = '[Metadata] Get current version success';\nexport const GET_CURRENT_VERSION_FAILURE = '[Metadata] Get current version failed';\n\nexport function getCurrentVersionAction() {\n  return {\n    type: GET_CURRENT_VERSION\n  };\n}\n\nexport function getCurrentVersionSuccessAction(currentVersion: string) {\n  return {\n    type: GET_CURRENT_VERSION_SUCCESS,\n    payload: {currentVersion}\n  };\n}\n\nexport function getCurrentVersionFailureAction() {\n  return {\n    type: GET_CURRENT_VERSION_FAILURE\n  };\n}\n\n","import { NgModule } from '@angular/core';\nimport {MeasurementsEpic} from './measurements.epic';\nimport {MetadataEpic} from './metadata.epic';\n\n@NgModule({\n  providers: [\n    MeasurementsEpic,\n    MetadataEpic\n  ]\n})\nexport class EpicsModule { }\n","import {Injectable} from '@angular/core';\nimport {MeasurementService} from '../../services/measurement.service';\nimport {ActionsObservable} from 'redux-observable';\nimport {AnyAction} from 'redux';\nimport {\n  FETCH_MEASUREMENTS,\n  fetchMeasurementsFailureAction,\n  fetchMeasurementsSuccessAction,\n  GET_LAST_MEASUREMENT,\n  getAverageMeasurementFailureAction,\n  getAverageMeasurementSuccessAction,\n  getLastMeasurementFailureAction,\n  getLastMeasurementSuccesAction\n} from '../actions/measurement.actions';\nimport {catchError, mergeMap, switchMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\n@Injectable()\nexport class MeasurementsEpic {\n  constructor (private measurementsService: MeasurementService) {\n  }\n\n  fetchMeasurements$ = (action$: ActionsObservable<AnyAction>) => {\n    return action$.ofType(FETCH_MEASUREMENTS).pipe(\n      switchMap(({payload}) => {\n        return this.measurementsService\n          .fetchMeasurements(payload.duration)\n          .pipe(\n            mergeMap(measurements => of(fetchMeasurementsSuccessAction(measurements))),\n            catchError(error => of(fetchMeasurementsFailureAction()))\n          );\n      })\n    );\n  }\n\n  getLastMeasurement$ = (action$: ActionsObservable<AnyAction>) => {\n    return action$.ofType(GET_LAST_MEASUREMENT).pipe(\n      switchMap(({payload}) => {\n        return this.measurementsService\n          .getLastMeasurement()\n          .pipe(\n            mergeMap(measurement => of(getLastMeasurementSuccesAction(measurement))),\n            catchError(error => of(getLastMeasurementFailureAction()))\n          );\n      })\n    );\n  }\n\n  getAverageMeasurement$ = (action$: ActionsObservable<AnyAction>) => {\n    return action$.ofType(GET_LAST_MEASUREMENT).pipe(\n      switchMap(({payload}) => {\n        return this.measurementsService\n          .getDayAverage()\n          .pipe(\n            mergeMap(measurement => of(getAverageMeasurementSuccessAction(measurement))),\n            catchError(error => of(getAverageMeasurementFailureAction()))\n          );\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MetadataService} from '../../services/metadata.service';\nimport {catchError, mergeMap, switchMap} from 'rxjs/operators';\nimport {ActionsObservable} from 'redux-observable';\nimport {FETCH_MEASUREMENTS, fetchMeasurementsFailureAction} from '../actions/measurement.actions';\nimport {AnyAction} from 'redux';\nimport {of} from 'rxjs';\nimport {GET_CURRENT_VERSION, getCurrentVersionFailureAction, getCurrentVersionSuccessAction} from '../actions/metadata.actions';\n\n@Injectable()\nexport class MetadataEpic {\n  constructor (private metadataService: MetadataService){}\n\n  getVersion$ = (action$: ActionsObservable<AnyAction>) => {\n    return action$.ofType(GET_CURRENT_VERSION).pipe(\n      switchMap(() => {\n        return this.metadataService\n          .getCurrentVersion()\n          .pipe(\n            mergeMap(version => of(getCurrentVersionSuccessAction(version.version))),\n            catchError(error => {\n\t\t\t\tconsole.log(error);\n\t\t\treturn of(getCurrentVersionFailureAction());})\n          );\n      })\n    );\n  }\n}\n","import {Reducer} from 'redux';\nimport {Duration, DURATIONS} from '../../model/duration';\nimport {CHANGE_DURATION} from '../actions/current-view.actions';\n\nexport interface CurrentViewState {\n  readonly duration: Duration;\n}\n\nexport const INITIAL_STATE: CurrentViewState = {\n  duration: DURATIONS[2]\n};\n\nexport const currentViewReducer: Reducer<CurrentViewState> = (state: CurrentViewState = INITIAL_STATE, action): CurrentViewState => {\n  switch (action.type) {\n    case CHANGE_DURATION: {\n      return {...state, duration: action.payload.duration}\n    }\n    default:\n      return state;\n  }\n};\n","import {Measurement} from '../../model/Measurement';\nimport {Reducer} from 'redux';\nimport {\n  FETCH_MEASUREMENTS,\n  FETCH_MEASUREMENTS_FAILURE,\n  FETCH_MEASUREMENTS_SUCCESS,\n  GET_AVERAGE_MEASUREMENT,\n  GET_AVERAGE_MEASUREMENT_FAILURE,\n  GET_AVERAGE_MEASUREMENT_SUCCESS,\n  GET_LAST_MEASUREMENT,\n  GET_LAST_MEASUREMENT_FAILURE,\n  GET_LAST_MEASUREMENT_SUCCESS\n} from '../actions/measurement.actions';\n\nexport interface MeasurementsState {\n  readonly measurements: Measurement[];\n  readonly isMeasurementsLoading: boolean;\n  readonly lastMeasurement: Measurement;\n  readonly isLastLoading: boolean;\n  readonly averageMeasurement: Measurement;\n  readonly isAverageLoading: boolean;\n}\n\nexport const INITIAL_STATE: MeasurementsState = {\n  measurements: [],\n  isMeasurementsLoading: false,\n  lastMeasurement: null,\n  isLastLoading: false,\n  averageMeasurement: null,\n  isAverageLoading: false\n};\n\nexport const measurementsReducer: Reducer<MeasurementsState> = (state: MeasurementsState = INITIAL_STATE, action): MeasurementsState => {\n  switch (action.type) {\n    case FETCH_MEASUREMENTS: {\n      return {...state, isMeasurementsLoading: true}\n    }\n    case FETCH_MEASUREMENTS_SUCCESS: {\n      return {...state, isMeasurementsLoading: false, measurements: action.payload.measurements}\n    }\n    case FETCH_MEASUREMENTS_FAILURE: {\n      return {...state, isMeasurementsLoading: false}\n    }\n    case GET_LAST_MEASUREMENT: {\n      return {...state, isLastLoading: true}\n    }\n    case GET_LAST_MEASUREMENT_SUCCESS: {\n      return {...state, isLastLoading: false, lastMeasurement: action.payload.measurement}\n    }\n    case GET_LAST_MEASUREMENT_FAILURE: {\n      return {...state, isLastLoading: false}\n    }\n    case GET_AVERAGE_MEASUREMENT: {\n      return {...state, isAverageLoading: true}\n    }\n    case GET_AVERAGE_MEASUREMENT_SUCCESS: {\n      return {...state, isAverageLoading: false, averageMeasurement: action.payload.measurement}\n    }\n    case GET_AVERAGE_MEASUREMENT_FAILURE: {\n      return {...state, isAverageLoading: false}\n    }\n    default:\n      return state;\n  }\n};\n","import {Reducer} from 'redux';\nimport {GET_CURRENT_VERSION, GET_CURRENT_VERSION_FAILURE, GET_CURRENT_VERSION_SUCCESS} from '../actions/metadata.actions';\n\nexport interface MetadataState {\n  readonly currentVersion: string;\n  readonly isVersionLoading: boolean;\n}\n\nexport const INITIAL_STATE: MetadataState = {\n  currentVersion: null,\n  isVersionLoading: false\n};\n\nexport const metadataReducer: Reducer<MetadataState> = (state: MetadataState = INITIAL_STATE, action): MetadataState => {\n  switch (action.type) {\n    case GET_CURRENT_VERSION: {\n      return {...state, isVersionLoading: true}\n    }\n    case GET_CURRENT_VERSION_SUCCESS: {\n      return {...state, currentVersion: action.payload.currentVersion, isVersionLoading: false}\n    }\n    case GET_CURRENT_VERSION_FAILURE: {\n      return {...state, isVersionLoading: false}\n    }\n    default:\n      return state;\n  }\n};\n","import {combineReducers, Reducer} from 'redux';\nimport {AppState} from '../index';\nimport { routerReducer } from '@angular-redux/router';\nimport {currentViewReducer} from './current-view.reducer';\nimport {measurementsReducer} from './measurements.reducer';\nimport {metadataReducer} from './metadata.reducer';\n\nexport const reducers: Reducer = combineReducers<AppState>({\n  route: routerReducer,\n  currentView: currentViewReducer,\n  measurements: measurementsReducer,\n  metadata: metadataReducer\n});\n","module.exports = \".application {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: stretch;\\n  height: 100%; }\\n  .application__header {\\n    flex-grow: 0;\\n    min-height: 50px;\\n    height: 50px;\\n    padding: 5px 40px 5px 40px;\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between; }\\n  .application__body {\\n    flex-grow: 1;\\n    padding: 40px 40px 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tZWRpYS9kbXl0cm8vRGF0YV9kcml2ZS9TdHVkeWluZy9WSUkgc2VtZXN0ZXIvU29mdHdhcmUgSW50ZWdyYXRpb24gU3lzdGVtcy9XZWF0aGVyT2JzZXJ2ZXIvZnJvbnQvc3JjL2Fzc2V0cy9jb21wb25lbnRzL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIscUJBQW9CO0VBQ3BCLGFBQVksRUFnQmI7RUFmQztJQUNFLGFBQVk7SUFDWixpQkFBZ0I7SUFDaEIsYUFBWTtJQUNaLDJCQUEwQjtJQUMxQixZQUFXO0lBQ1gsY0FBYTtJQUNiLCtCQUE4QixFQUUvQjtFQUNEO0lBQ0UsYUFBWTtJQUVaLHdCQUF1QixFQUN4QiIsImZpbGUiOiJzcmMvYXNzZXRzL2NvbXBvbmVudHMvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcGxpY2F0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIGhlaWdodDogMTAwJTtcbiAgJl9faGVhZGVyIHtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWluLWhlaWdodDogNTBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgcGFkZGluZzogNXB4IDQwcHggNXB4IDQwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xuICB9XG4gICZfX2JvZHkge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IGRhcmtzZWFncmVlbjtcbiAgICBwYWRkaW5nOiA0MHB4IDQwcHggMjBweDtcbiAgfVxufVxuIl19 */\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  hmr: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModuleRef, ApplicationRef } from '@angular/core';\n\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport const hmrBootstrap = (module: any, bootstrap: () => Promise<NgModuleRef<any>>) => {\n  let ngModule: NgModuleRef<any>;\n  module.hot.accept();\n  bootstrap().then(mod => (ngModule = mod));\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map(c => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n};\n","import 'hammerjs';\nimport {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\nimport {hmrBootstrap} from './hmr';\n\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\nif (environment.production) {\n  // .catch(err => console.error(err));\n\n  if (environment.hmr) {\n    if (module['hot']) {\n      hmrBootstrap(module, bootstrap);\n    } else {\n      enableProdMode();\n    }\n\n    console.error('HMR is not enabled for webpack-dev-server!');\n    console.log('Are you using the --hmr flag for ng serve?');\n  }\n} else {\n  bootstrap().catch(err => console.log(err));\n}\n"],"sourceRoot":""}